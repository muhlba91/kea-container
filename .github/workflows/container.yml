---
name: Container

on:
  pull_request:
    paths:
      - 'containers/**'
  push:
    branches:
      - '*'
    paths:
      - 'containers/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    strategy:
      fail-fast: true
      max-parallel: 4
      matrix:
        container:
          - kea

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect Change
        uses: dorny/paths-filter@v2
        id: detect-change
        with:
          filters: |
            changed:
              - 'containers/${{ matrix.container }}/**'
              - 'containers/KEA_VERSION'
              - 'containers/ALPINE_VERSION'

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: containers/${{ matrix.container }}/Dockerfile
          config: containers/.hadolint.yml

  container:
    runs-on: ubuntu-latest
    name: Build (and Push) Container Image
    permissions:
      contents: write
    needs:
      - lint
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        container:
          - kea

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Detect Change
        uses: dorny/paths-filter@v2
        id: detect-change
        with:
          filters: |
            changed:
              - 'containers/${{ matrix.container }}/**'

      - name: Build (and Push) ${{ matrix.container }}
        id: image
        if: steps.detect-change.outputs.changed == 'true'
        uses: ./.github/actions/container
        with:
          container: ${{ matrix.container }}
          token: ${{ secrets.GITHUB_TOKEN }}
          registryUsername: ${{ secrets.REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Check if a Chart Exists
        id: check-chart
        if: github.ref == 'refs/heads/main' && steps.detect-change.outputs.changed == 'true'
        working-directory: charts
        shell: bash
        run: |
          RELEASE_CHART="false"
          if [ -d "${{ matrix.container }}" ]; then
            echo "Marking chart ${{ matrix.container }} for release."
            RELEASE_CHART="true"
          fi
          echo ::set-output name=exists::$(echo $RELEASE_CHART)

      - name: Release Helm Chart ${{ matrix.container }}
        if: github.ref == 'refs/heads/main' && steps.detect-change.outputs.changed == 'true' && steps.check-chart.outputs.exists == 'true'
        uses: ./.github/actions/helm-release
        with:
          chart: ${{ matrix.container }}
          containerDigest: ${{ steps.image.outputs.containerDigest }}
          token: ${{ secrets.GITHUB_TOKEN }}
